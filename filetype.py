#!/usr/bin/env python
# -*- coding: utf-8 -*-

__author__ = 'lmzqwer2'

import os.path
import magic

import sys
reload(sys)
sys.setdefaultencoding('utf-8')

extname = {
	'sh'		: 'bash',
	'cs'		: 'csharp',
	'c'			: 'c',
	'cpp'		: 'cpp',
	'cc'		: 'cpp',
	'h'			: 'cpp',
	'css'		: 'css',
	'js'		: 'javascript',
	'coffee'	: 'ruby',
	'json'		: 'json',
	'java'		: 'java',
	'php'		: 'php',
	'txt'		: 'plain',
	'py'		: 'python',
	'rb'		: 'ruby',
	'sql'		: 'sql',
	'vb'		: 'vb',
	'xml'		: 'xml',
	'html'		: 'html',
	'htm'		: 'html',
	'diff'		: 'diff',
	'patch'		: 'patch',
	'bat'		: 'batchfile',
	'ini'		: 'ini',
	'coffee'	: 'coffee',
	'jsp'		: 'jsp',
	'jsx'		: 'jsx',
	'jade'		: 'jade',
	'ejs'		: 'ejs',
	'hs'		: 'haskell',
	'lua'		: 'lua',
	'm'			: 'matlab',
	'pas'		: 'pascal',
	'less'		: 'less',
	'sass'		: 'sass',
	'perl'		: 'perl',
	'v'			: 'verilog',
	'yaml'		: 'yaml',
	'vhdl'		: 'vhdl',
	'go'		: 'golang',
	'tex'		: 'latex',
	'io'		: 'io',
	'vbs'		: 'vbscript'
}

jsname = {
    "abap": "abap",
    "abc": "abc",
    "actionscript": "actionscript",
    "ada": "ada",
    "apache_conf": "apache_conf",
    "asciidoc": "asciidoc",
    "assembly_x86": "assembly_x86",
    "autohotkey": "autohotkey",
    "batchfile": "batchfile",
    "c": "c_cpp",
    "cpp": "c_cpp",
    "c9search": "c9search",
    "cirru": "cirru",
    "clojure": "clojure",
    "cobol": "cobol",
    "coffee": "coffee",
    "coldfusion": "coldfusion",
    "csharp": "csharp",
    "css": "css",
    "curly": "curly",
    "d": "d",
    "dart": "dart",
    "diff": "diff",
    "dockerfile": "dockerfile",
    "dot": "dot",
    "dummy": "dummy",
    "dummysyntax": "dummysyntax",
    "eiffel": "eiffel",
    "ejs": "ejs",
    "elixir": "elixir",
    "elm": "elm",
    "erlang": "erlang",
    "forth": "forth",
    "ftl": "ftl",
    "gcode": "gcode",
    "gherkin": "gherkin",
    "gitignore": "gitignore",
    "glsl": "glsl",
    "golang": "golang",
    "groovy": "groovy",
    "haml": "haml",
    "handlebars": "handlebars",
    "haskell": "haskell",
    "haxe": "haxe",
    "html": "html",
    "html_ruby": "html_ruby",
    "ini": "ini",
    "io": "io",
    "jack": "jack",
    "jade": "jade",
    "java": "java",
    "javascript": "javascript",
    "json": "json",
    "jsoniq": "jsoniq",
    "jsp": "jsp",
    "jsx": "jsx",
    "julia": "julia",
    "latex": "latex",
    "lean": "lean",
    "less": "less",
    "liquid": "liquid",
    "lisp": "lisp",
    "livescript": "livescript",
    "logiql": "logiql",
    "lsl": "lsl",
    "lua": "lua",
    "luapage": "luapage",
    "lucene": "lucene",
    "makefile": "makefile",
    "markdown": "markdown",
    "mask": "mask",
    "matlab": "matlab",
    "maze": "maze",
    "mel": "mel",
    "mushcode": "mushcode",
    "mysql": "mysql",
    "nix": "nix",
    "objectivec": "objectivec",
    "ocaml": "ocaml",
    "pascal": "pascal",
    "perl": "perl",
    "pgsql": "pgsql",
    "php": "php",
    "powershell": "powershell",
    "praat": "praat",
    "prolog": "prolog",
    "properties": "properties",
    "protobuf": "protobuf",
    "python": "python",
    "r": "r",
    "rdoc": "rdoc",
    "rhtml": "rhtml",
    "ruby": "ruby",
    "rust": "rust",
    "sass": "sass",
    "scad": "scad",
    "scala": "scala",
    "scheme": "scheme",
    "scss": "scss",
    "bash": "sh",
    "sjs": "sjs",
    "smarty": "smarty",
    "snippets": "snippets",
    "soy_template": "soy_template",
    "space": "space",
    "sql": "sql",
    "sqlserver": "sqlserver",
    "stylus": "stylus",
    "svg": "svg",
    "tcl": "tcl",
    "tex": "tex",
    "text": "text",
    "textile": "textile",
    "toml": "toml",
    "twig": "twig",
    "typescript": "typescript",
    "vala": "vala",
    "vbscript": "vbscript",
    "velocity": "velocity",
    "verilog": "verilog",
    "vhdl": "vhdl",
    "xml": "xml",
    "xquery": "xquery",
    "yaml": "yaml",
    "django": "django",
}

ms = magic.open(magic.NONE)
ms.load()

def filetype(name):
	fileinfo = ''
	try:
		fileinfo =  ms.file(name)
	except:
		print "something wrong with file name", name
	f = os.path.splitext(name)
	filename = os.path.split(name)[-1];
	ext = f[-1] if len(f[-1])>0 else filename
	ext = ext.strip('.').lower()
	langtype = extname.get(ext, ext)
	jsfile = jsname.get(langtype, None) if langtype is not type else None
	return {'readable': len(fileinfo.split('text'))>1, 'ext': langtype, 'js': jsfile}

if __name__ == '__main__':
	pass
